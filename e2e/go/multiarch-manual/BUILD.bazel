load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_go//go:def.bzl", "go_cross_binary")
load("@rules_img//img:image.bzl", "image_index", "image_manifest")
load("@rules_img//img:layer.bzl", "image_layer")
load("@rules_img//img:push.bzl", "image_push")

go_cross_binary(
    name = "app_linux_arm64",
    platform = "@rules_go//go/toolchain:linux_arm64",
    target = "//:app",
)

go_cross_binary(
    name = "app_linux_amd64",
    platform = "@rules_go//go/toolchain:linux_amd64",
    target = "//:app",
)

image_layer(
    name = "arm64_layer",
    srcs = {
        "/bin/app": ":app_linux_arm64",
    },
)

image_layer(
    name = "amd64_layer",
    srcs = {
        "/bin/app": ":app_linux_amd64",
    },
)

image_manifest(
    name = "arm64_image",
    architecture = "arm64",
    entrypoint = ["/bin/app"],
    layers = [
        ":arm64_layer",
    ],
    os = "linux",
)

filegroup(
    name = "arm64_image_oci_layout",
    srcs = [":arm64_image"],
    output_group = "oci_layout",
)

container_structure_test(
    name = "arm64_image_test",
    configs = ["arm64_image.yaml"],
    image = ":arm64_image_oci_layout",
    target_compatible_with = ["@platforms//cpu:arm64"],
)

image_manifest(
    name = "amd64_image",
    architecture = "amd64",
    entrypoint = ["/bin/app"],
    layers = [
        ":amd64_layer",
    ],
    os = "linux",
)

filegroup(
    name = "amd64_image_oci_layout",
    srcs = [":amd64_image"],
    output_group = "oci_layout",
)

container_structure_test(
    name = "amd64_image_test",
    configs = ["amd64_image.yaml"],
    image = ":amd64_image_oci_layout",
    target_compatible_with = ["@platforms//cpu:x86_64"],
)

image_index(
    name = "multiarch_image",
    manifests = [
        ":arm64_image",
        ":amd64_image",
    ],
)

image_push(
    name = "push",
    image = ":multiarch_image",
    registry = "ghcr.io",
    repository = "malt3/rules_img/go",
    tag = "multiarch-manual",
)

build_test(
    name = "test",
    targets = [
        ":arm64_layer",
        ":amd64_layer",
        ":arm64_image",
        ":amd64_image",
        ":multiarch_image",
        ":push",
    ],
)
